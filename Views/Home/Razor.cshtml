@{
    ViewData["Title"] = "Home Page";
}

<h1 class="display-4">Синтаксис Razor</h1>

<p>
    Razor - технологія впровадження у HTML можливостей програмування (C#). Умовно, можливості Razor поділяються на 
    вирази та інструкції. Основу синтаксису складає символ &commat, через що до HTML цей символ слід вставляти через сутність. 
    <b>&amp;commat;</b>. Однак, Razor розпізнає адреси E-mail, у них цей символ замінювати не треба: user@mail.net
</p>
<p>
    Вирази - мають результат. Razor-вирази його відображають. Якщо вираз простий, наприклад, виведення змінної, то 
    дадаткових конструкцій не треба, просто зазначається <code>&commat;x</code>, для більш складних вживаються круглі дужки 
    <code>&commat;(2 + 3)</code> = @(2 + 3)
</p>
<p>
    Інструкції - без результату, який треба виводити. Інструкції Razor беруться у фігурні дужки. <code>&commat;{ ... }</code>. 
    У дужках всі інструкії слідують синтаксису мови (C#). Змінні оголошені у таких блоках доступні по cshtml документу. Деякі інстукції 
    можна не обмежувати дужками, зокрема:

</p>
@{
    int x = 10;
    string str = "Hello";
}
<ul>
    <li>
        умовні конструкії <code>&commat;if</code>
        @if(x < 10)
        {
            <b>x меньше ніж 10</b>
        }
        else if(x == 10)
        {   
            <b>x дорівнює 10</b>      
        }
        else
        {
            <b>x більше ніж 10</b>
        }
        <br />
        у конструкціях такого типу Razor сам намагається визначитись з тим, що є інструкцією мови, а що - кодом HTML. 
        Як правило, це розпізнається за тегами.
    </li>
    <li>
        циклічні контрукції <code>&commat;while</code>
        <ul>
        @while(str.Length > 0)
        {
            <li>@str</li>
            str = str[..(str.Length-1)];
        }
        </ul>
    </li>
</ul>

<p>
    Також у проєкті є "суперглобальні" масиви, за допомогою яких можна передавати дані 
    від контролера до представлення. <br />
    ViewData["formController"] = @ViewData["formController"]
</p>

